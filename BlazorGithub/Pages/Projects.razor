@page "/projects"

<PageTitle>Projects</PageTitle>

<div class="container">
    <div class="row">
        <div class="col">
            <h1>Current Projects</h1>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h3><a href="https://github.com/CDMayberry/Reflyn" target="_blank">Reflyn</a></h3>
            A C# library built to provide a simple and easy to use API for generating code. Reflyn is based off a much
            older code generation library Refly, improving on the original and rebuilding the core to generate code via
            Roslyn. This has the advantage of being able to generate modern C# features not previously available in Refly.
            <br />
            <br />
            This project was made in part because I wanted a C# code generation library of my own and there weren't many available,
            and I wanted to look into how Roslyn works. I decided to use this as an opportunity to learn the ins and outs of Roslyn.
        </div>
    </div>
    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h3><a href="https://github.com/CDMayberry/MirrorState" target="_blank">MirrorState</a></h3>
            Experimental snapshot interpolation system built on top of the Mirror networking API for Unity. Developed
            tools for designers to define what data to synchronize across the network. Uses Reflyn to transform the
            designer defined data into C# components for snapshot interpolation and client-side prediction.
            <br />
            <br />
            MirrorState was intended as learning tool to understand video game networking architecture by building my own prototype of snapshot interpolation on top of Mirror. While it mimicked key features, it is not a real solution.
            As is though it still helped resolve some key issues my mech game, and further cemented my desire to move to a networking stack that has a proper fixed networking ticks.
            Eventually I'd like to rework parts of the system based off of Fredrik Holmstrom's video series and <a href="https://github.com/CDMayberry/NetCodeTalkStreams" target="_blank">accompanying code</a> on snapshot interpolation.
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col">
            <h1>Past Projects</h1>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h3><a href="https://github.com/CDMayberry/CanisMajor" target="_blank">Canis Major</a></h3>
            A horror game built for a college course as a team of 4, using C++ with Direct3D 10. My role included
            expanded the shader code and integrated shaders into gameplay mechanics, such as the flashlight and item
            highlighting.
        </div>
    </div>
</div>